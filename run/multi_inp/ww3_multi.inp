$ -------------------------------------------------------------------- $
$ WAVEWATCH III multi-grid model driver input file                     $
$ -------------------------------------------------------------------- $
$
$ *******************************************************************
$ *** NOTE : This is an example file from the mww3_test_05 script ***
$ ***        Unlike other input example files this one CANNOT     ***
$ ***        be run as an independent interactive run             ***
$ *******************************************************************
$
$ The first input line sets up the general multi-grid model definition
$ by defining the following six parameters :
$
$   1) Number of wave model grids.                          ( NRGRD )
$   2) Number of grids defining input fields.               ( NRINP )
$   3) Flag for using unified point output file.           ( UNIPTS )
$   4) Output server type as in ww3_shel.inp
$   5) Flag for dedicated process for unified point output.
$   6) Flag for grids sharing dedicated output processes.
$
  3 1 F 1 T T
$
$ -------------------------------------------------------------------- $
$ If there are input data grids defined ( NRINP > 0 ), then these
$ grids are defined first. These grids are defined as if they are wave
$ model grids using the file mod_def.MODID. Each grid is defined on
$ a separate input line with MODID, and eight input flags identifying
$ the presence of 1) water levels 2) currents 3) winds 4) ice and
$ 5-7) assimilation data as in the file ww3_shel.inp.
$
  'LB_INPUT_GRID' F F T T F F F
$
$ -------------------------------------------------------------------- $
$ If all point output is gathered in a unified point output file
$ ( UNIPTS = .TRUE. ), then the output spectral grid needs to be 
$ defined. Ths information is taken from a wave model grid, and only
$ the spectral definitions from this grid are relevant. Define the
$ name of this grid here
$
$  'points'
$
$ In this example, we need the file mod_def.points to define the
$ spectral output grid, and the point output will be written to the
$ file out_pnt.points
$
$ -------------------------------------------------------------------- $
$ Now each actual wave model grid is defined using 13 parameters to be
$ read from a single line in the file. Each line contains the following
$ parameters
$     1)   Define the grid with the extension of the mod_def file.
$    2-8)  Define the inputs used by the grids with 8 keywords 
$          corresponding to the 8 flags defining the input in the
$          input files. Valid keywords are:
$            'no'      : This input is not used.
$            'native'  : This grid has its own input files, e.g. grid
$                        grdX (mod_def.grdX) uses ice.grdX.
$            'MODID'   : Take input from the grid identified by 
$                        MODID. In the example below, all grids get
$                        their wind from wind.input (mod_def.input).
$     9)   Rank number of grid (internally sorted and reassigned).
$    10)   Group number (internally reassigned so that different
$          ranks result in different group numbers.
$   11-12) Define fraction of communicator (processes) used for this
$          grid.
$    13)   Flag identifying dumping of boundary data used by this
$          grid. If true, the file nest.MODID is generated.
$
  'LB_GRID1'  'no' 'no' 'LB_INPUT_GRID' 'LB_INPUT_GRID' 'no' 'no' 'no'   1  1  0.00 1.00  F
  'LB_GRID2'  'no' 'no' 'LB_INPUT_GRID' 'LB_INPUT_GRID' 'no' 'no' 'no'   2  1  0.00 1.00  F
  'LB_GRID3'  'no' 'no' 'LB_INPUT_GRID' 'LB_INPUT_GRID' 'no' 'no' 'no'   3  1  0.00 1.00  F
$
$ In this example three grids are used requiring the files
$ mod_def.grdN. All files get their winds from the grid 'input'
$ defined by mod_def.input, and no other inputs are used. In the lines
$ that are commented out, each grid runs on a part of the pool of
$ processes assigned to the computation.
$
$ -------------------------------------------------------------------- $
$ Starting and ending times for the entire model run
$
   LB_STARTING_TIME   LB_ENDING_TIME
$
$ -------------------------------------------------------------------- $
$ Specific multi-scale model settings (single line).
$    Flag for masking computation in two-way nesting (except at 
$                                                     output times).
$    Flag for masking at printout time.
$
  F F
$
$ -------------------------------------------------------------------- $
$ Conventional output requests as in ww3_shel.inp.  Will be applied
$ to all grids.
$
  LB_STARTING_TIME  LB_TIME_INT  LB_ENDING_TIME
$----------------------------------------------------------------
$
$ Output request flags identifying fields as in ww3_shel.inp. See that
$ file for a full documentation of field output options. Namelist type
$ selection is used here (for alternative F/T flags, see ww3_shel.inp).
$
$ Actual active parameter selection section
$   
$ (1) Forcing Fields                
  T 
$ DPT CUR WND AST WLV ICE IBG D50 IC1 IC5
  T   F   T   T   F   T   F   F   T   F
$ (2) Standard mean wave Parameters
  T
$ HS  LM  T02 T0M1 T01 FP DIR SPR DP
  T   T   T   T   T   T   T   T   T
$ (3) Frequency-dependent parameters
  F
$ EF TH1M STH1M TH2M STH2M WN
$  T   T   T   F   F   F            
$ (4) Spectral Partition Parameters
  F
$ PHS PTP PLP PDIR PSPR PWS TWS PNR   
$  T   T   T   T   T   T   T   T
$ (5) Atmosphere-waves layer
  T
$ UST CHA CGE FAW TAW TWA WCC WCF WCH WCM
  T   F   F   F   F   F   F   F   F   F
$ (6) Wave-Ocean layer
  T
$ SXY TWO BHD FOC TUS USS P2S USF P2L TWI FIC
  T   T   T   T   T   T   T   T   T   T   T
$ (7) Wave-bottom layer
  F
$ ABR UBR BED FBB TBB  
$  T   T   T   T   T
$ (8) Spectrum parameters
  F
$ MSS MSC WL02 AXT AYT AXY
$  T   T   T   T   T   T
$ (9) Numerical diagnostics
  T
$ DTD FC  CFX CFD CFK
  T   T   T   T   T
$ (10) User defined (NOEXTR flags needed)
  F
$  U1  U2
$ F   F
$
$----------------------------------------------------------------
$
$ NOTE: If UNIPTS = .TRUE. then the point output needs to be defined
$       here and cannot be redefined  below.
$
   LB_STARTING_TIME    0  LB_ENDING_TIME
$   19680606 000000   3600  19680608 000000
$       0.E3     0.E3  'eye       '
$       0.E3    50.E3  'mN        '
$     -35.E3    35.E3  'mNW       '
$     -50.E3     0.E3  'mW        '
$     -35.E3   -35.E3  'mSW       '
$       0.E3   -50.E3  'mS        '
$      35.E3   -35.E3  'mSE       '
$      50.E3     0.E3  'mE        '
$      35.E3    35.E3  'mNE       '
$       0.E3   100.E3  'aN        '
$     -70.E3    70.E3  'aNW       '
$    -100.E3     0.E3  'aW        '
$     -70.E3   -70.E3  'aSW       '
$       0.E3  -100.E3  'aS        '
$      70.E3   -70.E3  'aSE       '
$     100.E3     0.E3  'aE        '
$      70.E3    70.E3  'aNE       '
$       0.E3   210.E3  'bN        '
$    -150.E3   150.E3  'bNW       '
$    -210.E3     0.E3  'bW        '
$    -150.E3  -150.E3  'bSW       '
$       0.E3  -210.E3  'bS        '
$     150.E3  -150.E3  'bSE       '
$     210.E3     0.E3  'bE        '
$     150.E3   150.E3  'bNE       '
$       0.E3   800.E3  'cN        '
$    -550.E3   550.E3  'cNW       '
$    -800.E3     0.E3  'cW        '
$    -550.E3  -550.E3  'cSW       '
$       0.E3  -800.E3  'cS        '
$     550.E3  -550.E3  'cSE       '
$     800.E3     0.E3  'cE        '
$     550.E3   550.E3  'cNE       '
$       0.E3     0.E3  'STOPSTRING'
$
$  Four additional output types: see ww3_shel.inp for documentation.
$ 
$  track output
   LB_STARTING_TIME   0  LB_ENDING_TIME
$
$  restart files
   LB_STARTING_TIME  LB_TIME_RES  LB_ENDING_TIME
$
$  boundary output
   LB_STARTING_TIME   0  LB_ENDING_TIME 
$
$  separated wave field data
   LB_STARTING_TIME   0  LB_ENDING_TIME
$
$ -------------------------------------------------------------------- $
$ Output requests per grid and type to overwrite general setup
$ as defined above. First record per set is the grid name MODID
$ and the output type number. Then follows the standard time string,
$ and conventional data as per output type. In mww3_test_05 this is
$ not used. Below, one example generating partitioning output for 
$ the inner grid is included but commented out.
$
$ 'grd3'  6
$  19680606 000000    900  19680608 000000
$     0 999 1 0 999 1 T 
$
$ -------------------------------------------------------------------- $
$ Mandatory end of output requests per grid, identified by output 
$ type set to 0.
$
  'the_end'  0
$
$ -------------------------------------------------------------------- $
$ Moving grid data as in ww3_shel.inp. All grids will use same data.
$
$  'MOV' 19680606 000000   5.  90.
  'STP'
$
$ -------------------------------------------------------------------- $
$ End of input file                                                    $
$ -------------------------------------------------------------------- $
